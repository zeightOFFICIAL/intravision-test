// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server.Context;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(VendingMachineContext))]
    [Migration("20250418033259_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("brands", "public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Coca-Cola"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pepsi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nestlé"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lifeline"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Добрый"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Lipton"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Шишкин лес"
                        });
                });

            modelBuilder.Entity("server.Models.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount_available");

                    b.Property<string>("CoinType")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("coin_type");

                    b.Property<int>("Denomination")
                        .HasColumnType("integer")
                        .HasColumnName("denomination");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean")
                        .HasColumnName("is_blocked");

                    b.HasKey("Id");

                    b.ToTable("coins", "public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 25,
                            CoinType = "Regular",
                            Denomination = 1,
                            IsBlocked = false
                        },
                        new
                        {
                            Id = 2,
                            Amount = 10,
                            CoinType = "Regular",
                            Denomination = 2,
                            IsBlocked = false
                        },
                        new
                        {
                            Id = 3,
                            Amount = 30,
                            CoinType = "Regular",
                            Denomination = 5,
                            IsBlocked = false
                        },
                        new
                        {
                            Id = 4,
                            Amount = 20,
                            CoinType = "Regular",
                            Denomination = 10,
                            IsBlocked = false
                        });
                });

            modelBuilder.Entity("server.Models.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<int>("BrandId")
                        .HasColumnType("integer")
                        .HasColumnName("brand_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("drinks", "public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 5,
                            BrandId = 1,
                            ImageUrl = "colao.png",
                            Name = "Coca-Cola Classic 333ml",
                            Price = 103m
                        },
                        new
                        {
                            Id = 2,
                            Amount = 2,
                            BrandId = 1,
                            ImageUrl = "colao.png",
                            Name = "Coca-Cola Classic 499ml",
                            Price = 131m
                        },
                        new
                        {
                            Id = 3,
                            Amount = 3,
                            BrandId = 1,
                            ImageUrl = "colaz.png",
                            Name = "Coca-Cola Zero Sugar 333ml",
                            Price = 97m
                        },
                        new
                        {
                            Id = 5,
                            Amount = 3,
                            BrandId = 2,
                            ImageUrl = "pepsi.png",
                            Name = "Pepsi 499ml",
                            Price = 121m
                        },
                        new
                        {
                            Id = 6,
                            Amount = 4,
                            BrandId = 2,
                            ImageUrl = "pepsim.png",
                            Name = "Pepsi Max 499ml",
                            Price = 140m
                        },
                        new
                        {
                            Id = 7,
                            Amount = 2,
                            BrandId = 2,
                            ImageUrl = "pepsim.png",
                            Name = "Pepsi Max 333ml",
                            Price = 121m
                        },
                        new
                        {
                            Id = 8,
                            Amount = 7,
                            BrandId = 2,
                            ImageUrl = "pepsi.png",
                            Name = "Pepsi 333ml",
                            Price = 113m
                        },
                        new
                        {
                            Id = 9,
                            Amount = 0,
                            BrandId = 3,
                            ImageUrl = "nesteag.png",
                            Name = "Nestea Green Tea 333ml",
                            Price = 131m
                        },
                        new
                        {
                            Id = 10,
                            Amount = 1,
                            BrandId = 3,
                            ImageUrl = "nesteal.png",
                            Name = "Nestea Lemon 333ml",
                            Price = 121m
                        },
                        new
                        {
                            Id = 11,
                            Amount = 0,
                            BrandId = 3,
                            ImageUrl = "nesteap.png",
                            Name = "Nestea Peach 333ml",
                            Price = 124m
                        },
                        new
                        {
                            Id = 12,
                            Amount = 13,
                            BrandId = 3,
                            ImageUrl = "nestear.png",
                            Name = "Nestea Raspberry 333ml",
                            Price = 146m
                        },
                        new
                        {
                            Id = 13,
                            Amount = 3,
                            BrandId = 4,
                            ImageUrl = "lifelinew.png",
                            Name = "Lifeline Watermelon 499ml",
                            Price = 151m
                        },
                        new
                        {
                            Id = 14,
                            Amount = 2,
                            BrandId = 4,
                            ImageUrl = "lifelinel.png",
                            Name = "Lifeline Lichi 499ml",
                            Price = 140m
                        },
                        new
                        {
                            Id = 15,
                            Amount = 0,
                            BrandId = 4,
                            ImageUrl = "lifelinep.png",
                            Name = "Lifeline Peach 499ml",
                            Price = 135m
                        },
                        new
                        {
                            Id = 16,
                            Amount = 5,
                            BrandId = 5,
                            ImageUrl = "dobriyo.png",
                            Name = "Добрый Апельсин 499ml",
                            Price = 190m
                        },
                        new
                        {
                            Id = 17,
                            Amount = 4,
                            BrandId = 5,
                            ImageUrl = "dobriya.png",
                            Name = "Добрый Яблоко 499ml",
                            Price = 192m
                        },
                        new
                        {
                            Id = 18,
                            Amount = 3,
                            BrandId = 5,
                            ImageUrl = "dobriym.png",
                            Name = "Добрый Мультифрукт 499ml",
                            Price = 181m
                        },
                        new
                        {
                            Id = 19,
                            Amount = 5,
                            BrandId = 6,
                            ImageUrl = "lipton.png",
                            Name = "Lipton Ice Tea Lemon 499ml",
                            Price = 148m
                        },
                        new
                        {
                            Id = 20,
                            Amount = 9,
                            BrandId = 6,
                            ImageUrl = "liptonp.png",
                            Name = "Lipton Ice Tea Peach 499ml",
                            Price = 187m
                        },
                        new
                        {
                            Id = 21,
                            Amount = 2,
                            BrandId = 6,
                            ImageUrl = "liptong.png",
                            Name = "Lipton Green Tea 499ml",
                            Price = 201m
                        },
                        new
                        {
                            Id = 22,
                            Amount = 15,
                            BrandId = 7,
                            ImageUrl = "sl.png",
                            Name = "Шишкин лес Газированная 333ml",
                            Price = 64m
                        },
                        new
                        {
                            Id = 23,
                            Amount = 4,
                            BrandId = 7,
                            ImageUrl = "sl.png",
                            Name = "Шишкин лес Негазированная 333ml",
                            Price = 44m
                        },
                        new
                        {
                            Id = 24,
                            Amount = 4,
                            BrandId = 7,
                            ImageUrl = "sl.png",
                            Name = "Шишкин лес Минеральная 333ml",
                            Price = 32m
                        });
                });

            modelBuilder.Entity("server.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("amount_paid");

                    b.Property<decimal>("ChangeAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("change_amount");

                    b.Property<string>("FailureReason")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("failure_reason");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount");

                    b.HasKey("Id");

                    b.HasIndex("OrderDate");

                    b.ToTable("orders", "public");
                });

            modelBuilder.Entity("server.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("brand_name");

                    b.Property<string>("DrinkName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("drink_name");

                    b.Property<string>("ImageUrlAtPurchase")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image_url_at_purchase");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("order_id");

                    b.Property<decimal>("PriceAtPurchase")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price_at_purchase");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_price");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("order_items", "public");
                });

            modelBuilder.Entity("server.Models.Drink", b =>
                {
                    b.HasOne("server.Models.Brand", "Brand")
                        .WithMany("Drinks")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("server.Models.OrderItem", b =>
                {
                    b.HasOne("server.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("server.Models.Brand", b =>
                {
                    b.Navigation("Drinks");
                });

            modelBuilder.Entity("server.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
